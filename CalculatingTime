import numpy as np
import skfuzzy as fuzz
from skfuzzy import control as ctrl

weight = ctrl.Antecedent(np.arange(0, 70, 1), 'weight')
humidity = ctrl.Antecedent(np.arange(0, 11, 1), 'humidity')
temperature = ctrl.Antecedent(np.arange(25, 40, 1), 'temperature')
time = ctrl.Consequent(np.arange(0, 24, 1), 'time')
weight.automf(3)
humidity.automf(3)
temperature.automf(3)
time['low'] = fuzz.trimf(time.universe, [0, 0, 10])
time['medium'] = fuzz.trimf(time.universe, [0, 10, 24])
time['high'] = fuzz.trimf(time.universe, [10, 24, 24])
weight['average'].view()
weight.view()
time.view()
rule1 = ctrl.Rule(weight['poor'] & humidity['good'] & temperature['good'], time['low'])
rule2 = ctrl.Rule(weight['average'] & humidity['good'] & temperature['good'], time['medium'])
rule3 = ctrl.Rule(weight['average'] & humidity['average']& temperature['good'], time['medium'])
rule4 = ctrl.Rule(weight['good'] & humidity['poor'] & temperature['good'], time['high'])
rule1.view()
timing_ctrl = ctrl.ControlSystem([rule1, rule2, rule3,rule4 ])
timing = ctrl.ControlSystemSimulation(timing_ctrl)
timing.input['weight'] = 65
timing.input['humidity'] = 9
timing.input['temperature'] = 35
timing.compute()
print (timing.output['time'])
